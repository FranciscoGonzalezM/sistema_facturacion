{% extends 'core/base.html' %}
{% load static %}
{% block title %}{% if form.instance.id %}Editar{% else %}Nuevo{% endif %} Producto{% endblock %}

{% block content %}
<h2>{% if form.instance.id %}Editar{% else %}Nuevo{% endif %} Producto</h2>
<a href="javascript:history.back()" class="btn btn-secondary mb-3">⬅ Volver</a>

<!-- Mensajes de confirmación -->
{% if messages %}
<div class="messages">
    {% for message in messages %}
    <div class="alert alert-{{ message.tags }} alert-dismissible fade show" role="alert">
        {{ message }}
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
    {% endfor %}
</div>
{% endif %}

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <ul class="nav nav-tabs card-header-tabs" id="ingresoTabs" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="manual-tab" data-bs-toggle="tab" data-bs-target="#manual" type="button" role="tab">
                            <i class="fas fa-keyboard me-2"></i>Ingreso Manual
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="scan-tab" data-bs-toggle="tab" data-bs-target="#scan" type="button" role="tab">
                            <i class="fas fa-qrcode me-2"></i>Escanear Código
                        </button>
                    </li>
                </ul>
            </div>
            <div class="card-body">
                <div class="tab-content" id="ingresoTabsContent">
                    <!-- Formulario Manual -->
                    <div class="tab-pane fade show active" id="manual" role="tabpanel">
                        <form method="post" id="productForm" enctype="multipart/form-data">
                            {% csrf_token %}
                            
                            <div class="mb-3">
                                <label for="id_categoria" class="form-label">Categoría *</label>
                                {{ form.categoria }}
                                {% if form.categoria.errors %}
                                <div class="text-danger">{{ form.categoria.errors }}</div>
                                {% endif %}
                            </div>
                            
                            <div class="mb-3">
                                <label for="id_nombre" class="form-label">Nombre del Producto *</label>
                                {{ form.nombre }}
                                {% if form.nombre.errors %}
                                <div class="text-danger">{{ form.nombre.errors }}</div>
                                {% endif %}
                            </div>
                            
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label for="id_precio" class="form-label">Precio *</label>
                                    <div class="input-group">
                                        <span class="input-group-text">$</span>
                                        {{ form.precio }}
                                    </div>
                                    {% if form.precio.errors %}
                                    <div class="text-danger">{{ form.precio.errors }}</div>
                                    {% endif %}
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label for="id_stock" class="form-label">Stock *</label>
                                    {{ form.stock }}
                                    {% if form.stock.errors %}
                                    <div class="text-danger">{{ form.stock.errors }}</div>
                                    {% endif %}
                                </div>
                            </div>
                            
                            <div class="mb-3">
                                <label for="id_codigo_qr" class="form-label">Código QR</label>
                                {{ form.codigo_qr }}
                                {% if form.codigo_qr.errors %}
                                <div class="text-danger">{{ form.codigo_qr.errors }}</div>
                                {% endif %}
                                <div class="form-text">Dejar vacío para generar automáticamente</div>
                            </div>
                            
                            <!-- Campo para códigos de barras -->
                            <div class="mb-3">
                                <label class="form-label">Códigos de Barras</label>
                                <div id="barcodes-container">
                                    {% if form.instance.id %}
                                        {% for barcode in form.instance.barcodes.all %}
                                        <div class="input-group mb-2">
                                            <input type="text" class="form-control" name="barcodes" value="{{ barcode.code }}" placeholder="Código de barras">
                                            <button type="button" class="btn btn-outline-danger remove-barcode">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                        {% endfor %}
                                    {% endif %}
                                    <div class="input-group mb-2">
                                        <input type="text" class="form-control" name="barcodes" placeholder="Código de barras">
                                        <button type="button" class="btn btn-outline-success add-barcode">
                                            <i class="fas fa-plus"></i>
                                        </button>
                                    </div>
                                </div>
                                <button type="button" id="generate-barcode" class="btn btn-outline-primary mt-2">
                                    <i class="fas fa-barcode me-2"></i>Generar Código de Barras
                                </button>
                            </div>
                            
                            <button type="submit" class="btn btn-primary w-100 mt-2">
                                <i class="fas fa-save me-2"></i>Guardar Producto
                            </button>
                        </form>
                    </div>
                    
                    <!-- Escáner -->
                    <div class="tab-pane fade" id="scan" role="tabpanel">
                        <div class="scanner-container">
                            <video id="qr-video"></video>
                            <div class="scanner-overlay"></div>
                            <div class="scanner-label">Enfoca el código QR dentro del marco</div>
                        </div>
                        <div class="d-flex justify-content-center mb-4 mt-3">
                            <button id="startScanner" class="btn btn-success me-2">
                                <i class="fas fa-camera me-2"></i>Iniciar Escáner
                            </button>
                            <button id="stopScanner" class="btn btn-danger" disabled>
                                <i class="fas fa-stop me-2"></i>Detener Escáner
                            </button>
                        </div>
                        <div class="mt-3">
                            <label for="manualCodeInput" class="form-label">O ingresa el código manualmente:</label>
                            <div class="input-group">
                                <input type="text" class="form-control" id="manualCodeInput" placeholder="Código QR">
                                <button class="btn btn-outline-primary" type="button" id="addByManualCode">
                                    <i class="fas fa-check me-1"></i>Usar este código
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-md-4">
        <div class="card">
            <div class="card-header text-center">
                <i class="fas fa-info-circle me-2"></i>Información del Sistema
            </div>
            <div class="card-body">
                <div class="text-center">
                    <div class="feature-icon mb-3">
                        <i class="fas fa-qrcode"></i>
                    </div>
                    <h5>Escaneo de Códigos QR</h5>
                    <p class="text-muted">Usa la cámara para escanear códigos QR y completar automáticamente el campo de código</p>
                </div>
            </div>
        </div>
        
        <div class="card mt-4">
            <div class="card-header text-center">
                <i class="fas fa-lightbulb me-2"></i>Sugerencias
            </div>
            <div class="card-body">
                <ul class="list-group list-group-flush">
                    <li class="list-group-item">Asegúrate de tener buena iluminación al escanear</li>
                    <li class="list-group-item">Mantén estable el dispositivo durante el escaneo</li>
                    <li class="list-group-item">Verifica que el código escaneado sea correcto</li>
                </ul>
            </div>
        </div>
        
        <!-- Vista previa del código de barras -->
        <div class="card mt-4" id="barcode-preview-container" style="display: none;">
            <div class="card-header text-center">
                <i class="fas fa-barcode me-2"></i>Vista Previa Código de Barras
            </div>
            <div class="card-body text-center">
                <canvas id="barcode-preview" width="200" height="100"></canvas>
                <p class="mt-2 text-muted small" id="barcode-value"></p>
                <button class="btn btn-sm btn-outline-success mt-2" id="use-barcode-btn">
                    <i class="fas fa-check me-1"></i>Usar este código
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Estilos para el escáner -->
<style>
    .scanner-container {
        position: relative;
        width: 100%;
        height: 300px;
        overflow: hidden;
        border-radius: 12px;
        background-color: #f0f0f0;
        display: flex;
        justify-content: center;
        align-items: center;
        margin-bottom: 1.5rem;
        border: 2px dashed #ccc;
    }
    
    #qr-video {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }
    
    .scanner-overlay {
        position: absolute;
        width: 80%;
        height: 200px;
        border: 3px solid #fff;
        box-shadow: 0 0 0 100vmax rgba(0, 0, 0, 0.5);
        border-radius: 12px;
    }
    
    .scanner-label {
        position: absolute;
        bottom: 10px;
        color: white;
        font-weight: 500;
        text-align: center;
        width: 100%;
        text-shadow: 1px 1px 3px rgba(0,0,0,0.7);
    }
    
    .feature-icon {
        font-size: 2.5rem;
        color: #4361ee;
        background: linear-gradient(135deg, #4361ee, #7209b7);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }
    
    .nav-tabs .nav-link {
        border: none;
        border-bottom: 3px solid transparent;
        color: #495057;
        font-weight: 500;
        padding: 0.8rem 1.2rem;
    }
    
    .nav-tabs .nav-link.active {
        border-bottom: 3px solid #4361ee;
        color: #4361ee;
        background: transparent;
    }
    
    /* Estilos para vista previa de código de barras */
    #barcode-preview {
        border: 1px solid #eee;
        border-radius: 4px;
        padding: 10px;
        background: white;
    }
</style>

<script src="https://cdn.jsdelivr.net/npm/jsqr@1.4.0/dist/jsQR.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/jsbarcode@3.11.5/dist/JsBarcode.all.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        console.log('=== SISTEMA DE ESCÁNER - DETECCIÓN DE CÁMARAS ===');
        
        // Variables globales
        let scannerActive = false;
        let stream = null;
        const video = document.getElementById('qr-video');
        const startBtn = document.getElementById('startScanner');
        const stopBtn = document.getElementById('stopScanner');
        
        // Verificar compatibilidad
        if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {
            console.error('❌ API de cámara no disponible');
            startBtn.disabled = true;
            startBtn.innerHTML = '<i class="fas fa-times me-2"></i>No compatible';
            showNotification('Navegador no compatible con cámara', 'danger');
            return;
        }
        
        console.log('✅ API de cámara disponible');
        
        // EVENTO INICIAR ESCÁNER - VERSIÓN ROBUSTA
        startBtn.addEventListener('click', async function() {
            console.log('🎬 Intentando iniciar cámara...');
            
            try {
                startBtn.disabled = true;
                stopBtn.disabled = false;
                startBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Conectando...';
                
                // Detener stream anterior si existe
                if (stream) {
                    stopScanner();
                    await new Promise(resolve => setTimeout(resolve, 300));
                }
                
                // INTENTAR DIFERENTES CONFIGURACIONES DE CÁMARA
                const cameraConfigs = [
                    // Configuración 1: Cámara trasera (environment)
                    {
                        video: {
                            facingMode: "environment",
                            width: { ideal: 1280 },
                            height: { ideal: 720 }
                        }
                    },
                    // Configuración 2: Cámara frontal (user)
                    {
                        video: {
                            facingMode: "user",
                            width: { ideal: 1280 },
                            height: { ideal: 720 }
                        }
                    },
                    // Configuración 3: Cualquier cámara
                    {
                        video: true
                    },
                    // Configuración 4: Resolución baja
                    {
                        video: {
                            width: { min: 640, ideal: 640, max: 640 },
                            height: { min: 480, ideal: 480, max: 480 }
                        }
                    }
                ];
                
                let cameraConnected = false;
                
                // Probar cada configuración hasta que una funcione
                for (let i = 0; i < cameraConfigs.length; i++) {
                    try {
                        console.log(`📷 Probando configuración ${i + 1}...`);
                        showNotification(`Probando cámara ${i + 1}/${cameraConfigs.length}`, 'info');
                        
                        stream = await navigator.mediaDevices.getUserMedia(cameraConfigs[i]);
                        cameraConnected = true;
                        console.log(`✅ Configuración ${i + 1} exitosa`);
                        break;
                        
                    } catch (error) {
                        console.warn(`❌ Configuración ${i + 1} falló:`, error.message);
                        // Continuar con la siguiente configuración
                    }
                }
                
                if (!cameraConnected) {
                    throw new Error('No se pudo conectar con ninguna cámara');
                }
                
                // CONFIGURAR VIDEO
                video.srcObject = stream;
                video.playsInline = true;
                
                // Esperar a que el video esté listo
                await new Promise((resolve, reject) => {
                    video.onloadedmetadata = resolve;
                    video.onerror = reject;
                    setTimeout(reject, 5000); // Timeout de 5 segundos
                });
                
                console.log('🎥 Metadata del video cargada');
                
                // INICIAR REPRODUCCIÓN
                try {
                    await video.play();
                    console.log('✅ Video reproduciéndose');
                    
                    scannerActive = true;
                    startBtn.innerHTML = '<i class="fas fa-camera me-2"></i>Escaneando...';
                    
                    // Iniciar detección
                    startQRDetection();
                    showNotification('Cámara activada - Escaneando QR', 'success');
                    
                } catch (playError) {
                    console.error('❌ Error al reproducir video:', playError);
                    throw new Error('No se pudo reproducir el video');
                }
                
            } catch (error) {
                console.error('❌ ERROR CRÍTICO:', error);
                
                let errorMessage = 'Error al conectar con la cámara';
                
                if (error.name === 'NotAllowedError') {
                    errorMessage = 'Permiso de cámara denegado. Por favor permite el acceso.';
                } else if (error.name === 'NotFoundError') {
                    errorMessage = 'No se encontró ninguna cámara conectada.';
                } else if (error.name === 'NotReadableError') {
                    errorMessage = 'La cámara está siendo usada por otra aplicación.';
                } else if (error.name === 'OverconstrainedError') {
                    errorMessage = 'No se pudo configurar la cámara.';
                }
                
                showNotification(errorMessage, 'danger');
                stopScanner();
            }
        });
        
        // DETENER ESCÁNER
        stopBtn.addEventListener('click', function() {
            console.log('⏹️ Deteniendo escáner por usuario');
            stopScanner();
        });
        
        // DETECCIÓN DE QR
        function startQRDetection() {
            if (!scannerActive) return;
            
            console.log('🔍 Iniciando detección QR...');
            
            const canvas = document.createElement('canvas');
            const context = canvas.getContext('2d');
            let frameCount = 0;
            
            const scanFrame = () => {
                if (!scannerActive) return;
                
                try {
                    frameCount++;
                    
                    if (video.readyState === video.HAVE_ENOUGH_DATA) {
                        canvas.width = video.videoWidth;
                        canvas.height = video.videoHeight;
                        context.drawImage(video, 0, 0, canvas.width, canvas.height);
                        
                        const imageData = context.getImageData(0, 0, canvas.width, canvas.height);
                        const code = jsQR(imageData.data, canvas.width, canvas.height, {
                            inversionAttempts: "dontInvert",
                        });
                        
                        if (code) {
                            console.log('✅ QR DETECTADO:', code.data);
                            handleScannedCode(code.data);
                            return;
                        }
                        
                        // Log cada 30 frames
                        if (frameCount % 30 === 0) {
                            console.log('📊 Escaneando frame', frameCount);
                        }
                    }
                } catch (error) {
                    console.error('Error en escaneo:', error);
                }
                
                if (scannerActive) {
                    requestAnimationFrame(scanFrame);
                }
            };
            
            scanFrame();
        }
        
        // MANEJAR CÓDIGO DETECTADO
        function handleScannedCode(code) {
            console.log('💾 Guardando código:', code);
            stopScanner();
            
            // Llenar campo de código
            const codeField = document.getElementById('id_codigo_qr');
            if (codeField) {
                codeField.value = code;
                
                // Efecto visual
                codeField.style.border = '2px solid #28a745';
                codeField.style.boxShadow = '0 0 10px rgba(40, 167, 69, 0.5)';
                setTimeout(() => {
                    codeField.style.border = '';
                    codeField.style.boxShadow = '';
                }, 2000);
            }
            
            // Cambiar a pestaña manual
            switchToManualTab();
            showNotification('✅ Código capturado: ' + code, 'success');
        }
        
        // CAMBIAR A PESTAÑA MANUAL
        function switchToManualTab() {
            try {
                const manualTab = document.getElementById('manual-tab');
                if (manualTab) {
                    const tab = new bootstrap.Tab(manualTab);
                    tab.show();
                }
                
                setTimeout(() => {
                    const nombreField = document.getElementById('id_nombre');
                    if (nombreField) nombreField.focus();
                }, 300);
                
            } catch (error) {
                console.warn('Error al cambiar pestaña:', error);
            }
        }
        
        // DETENER ESCÁNER COMPLETAMENTE
        function stopScanner() {
            console.log('🛑 Deteniendo escáner...');
            scannerActive = false;
            
            // Detener stream
            if (stream) {
                stream.getTracks().forEach(track => {
                    track.stop();
                });
                stream = null;
            }
            
            // Limpiar video
            if (video.srcObject) {
                video.srcObject = null;
            }
            
            video.pause();
            
            // Restablecer botones
            startBtn.disabled = false;
            stopBtn.disabled = true;
            startBtn.innerHTML = '<i class="fas fa-camera me-2"></i>Iniciar Escáner';
            
            console.log('✅ Escáner completamente detenido');
        }
        
        // BOTÓN DE CÓDIGO MANUAL
        document.getElementById('addByManualCode').addEventListener('click', function() {
            const input = document.getElementById('manualCodeInput');
            const code = input.value.trim();
            
            if (!code) {
                showNotification('⚠️ Ingresa un código primero', 'warning');
                return;
            }
            
            const codeField = document.getElementById('id_codigo_qr');
            if (codeField) {
                codeField.value = code;
            }
            
            switchToManualTab();
            input.value = '';
            showNotification('✅ Código manual asignado', 'info');
        });
        
        // NOTIFICACIONES
        function showNotification(message, type) {
            // Limpiar notificaciones anteriores
            document.querySelectorAll('.scan-notification').forEach(el => el.remove());
            
            const notification = document.createElement('div');
            notification.className = `alert alert-${type} alert-dismissible fade show scan-notification`;
            notification.style.cssText = `
                position: fixed;
                top: 20px;
                right: 20px;
                z-index: 9999;
                min-width: 300px;
                font-weight: bold;
            `;
            
            notification.innerHTML = `
                ${type === 'success' ? '✅' : type === 'warning' ? '⚠️' : '❌'} 
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            document.body.appendChild(notification);
            
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.parentNode.removeChild(notification);
                }
            }, 5000);
        }
        
        // TESTEO DE CÁMARA AL CARGAR
        console.log('🔄 Verificando disponibilidad de cámaras...');
        checkCameraAvailability();
        
        async function checkCameraAvailability() {
            try {
                const devices = await navigator.mediaDevices.enumerateDevices();
                const videoDevices = devices.filter(device => device.kind === 'videoinput');
                
                console.log('📋 Cámaras disponibles:', videoDevices.length);
                
                if (videoDevices.length === 0) {
                    console.warn('⚠️ No se detectaron cámaras');
                    startBtn.disabled = true;
                    startBtn.innerHTML = '<i class="fas fa-times me-2"></i>Sin cámara';
                    showNotification('No se detectó ninguna cámara', 'warning');
                } else {
                    console.log('✅ Cámaras detectadas:', videoDevices.map(d => d.label || 'Cámara ' + d.deviceId));
                }
                
            } catch (error) {
                console.error('Error al verificar cámaras:', error);
            }
        }
        
        // ==============================================
        // CÓDIGOS DE BARRAS - FUNCIONALIDAD ADICIONAL
        // ==============================================
        
        // Agregar campo de código de barras
        document.querySelector('.add-barcode').addEventListener('click', function() {
            const newInput = document.createElement('div');
            newInput.className = 'input-group mb-2';
            newInput.innerHTML = `
                <input type="text" class="form-control" name="barcodes" placeholder="Código de barras">
                <button type="button" class="btn btn-outline-danger remove-barcode">
                    <i class="fas fa-trash"></i>
                </button>
            `;
            document.getElementById('barcodes-container').appendChild(newInput);
            
            // Agregar evento al nuevo botón de eliminar
            newInput.querySelector('.remove-barcode').addEventListener('click', function() {
                this.closest('.input-group').remove();
            });
        });
        
        // Eliminar campo de código de barras
        document.querySelectorAll('.remove-barcode').forEach(button => {
            button.addEventListener('click', function() {
                this.closest('.input-group').remove();
            });
        });
        
        // Generar código de barras
        document.getElementById('generate-barcode').addEventListener('click', function() {
            // Generar un código aleatorio de 13 dígitos (formato EAN-13)
            const randomCode = Math.floor(1000000000000 + Math.random() * 9000000000000).toString();
            
            // Mostrar vista previa
            const previewContainer = document.getElementById('barcode-preview-container');
            const canvas = document.getElementById('barcode-preview');
            const barcodeValue = document.getElementById('barcode-value');
            
            // Generar el código de barras en el canvas
            JsBarcode(canvas, randomCode, {
                format: "EAN13",
                lineColor: "#000",
                width: 2,
                height: 40,
                displayValue: true
            });
            
            barcodeValue.textContent = randomCode;
            previewContainer.style.display = 'block';
            
            // Configurar botón para usar este código
            document.getElementById('use-barcode-btn').onclick = function() {
                // Agregar el código a la lista
                const newInput = document.createElement('div');
                newInput.className = 'input-group mb-2';
                newInput.innerHTML = `
                    <input type="text" class="form-control" name="barcodes" value="${randomCode}" placeholder="Código de barras">
                    <button type="button" class="btn btn-outline-danger remove-barcode">
                        <i class="fas fa-trash"></i>
                    </button>
                `;
                document.getElementById('barcodes-container').appendChild(newInput);
                
                // Agregar evento al nuevo botón de eliminar
                newInput.querySelector('.remove-barcode').addEventListener('click', function() {
                    this.closest('.input-group').remove();
                });
                
                // Ocultar vista previa
                previewContainer.style.display = 'none';
                
                showNotification('Código de barras agregado', 'success');
            };
        });
        
        console.log('✅ Sistema de escáner y códigos de barras inicializado');
    });
</script>

<style>
    /* Mejoras visuales */
    #startScanner:disabled {
        opacity: 0.6;
        cursor: not-allowed;
    }
    
    #stopScanner:disabled {
        opacity: 0.6;
        cursor: not-allowed;
    }
    
    .scanner-container {
        transition: all 0.3s ease;
    }
    
    .scanner-container.active {
        border: 3px solid #28a745 !important;
        box-shadow: 0 0 20px rgba(40, 167, 69, 0.3) !important;
    }
    
    /* Spinner para carga */
    .fa-spinner {
        animation: spin 1s linear infinite;
    }
    
    @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }
</style>
{% endblock %}