{% extends "core/base.html" %}
{% load static %}

{% block title %}Facturar{% endblock %}

{% block content %}
<div class="container py-3">
  <h4>Crear Factura</h4>

  <form id="facturaForm" method="post" action="{% url 'facturas:facturar' %}" novalidate>
    {% csrf_token %}
    <div class="row gy-2 align-items-center mb-3">
      <div class="col-md-2">
        <label class="form-label fw-bold">Factura No.</label>
        <input type="text" class="form-control fw-bold text-danger" value="{{ numero_factura|default:'000001' }}" readonly>
      </div>
      <div class="col-md-2">
        <label class="form-label fw-bold">Fecha</label>
        <input type="date" name="fechaFactura" class="form-control fw-bold text-danger" value="{{ fecha|date:'Y-m-d' }}">
      </div>
      <div class="col-md-4">
        <label class="form-label fw-bold">Tipo Venta</label>
        <select name="tipoVenta" class="form-select">
          <option value="contado" selected>VENTA DE CONTADO</option>
          <option value="credito">CREDITO</option>
        </select>
      </div>
      <div class="col-md-4 text-end">
        <button type="button" class="btn btn-outline-secondary" data-bs-toggle="modal" data-bs-target="#modalProductos">Agregar Productos</button>
      </div>
    </div>

    <div class="mb-3">
      <input type="text" id="codigoEscaneado" class="form-control" placeholder="Escanea QR o escribe ID/C칩digo/Nombre" onkeypress="if(event.key==='Enter'){buscarProducto(); return false;}">
    </div>

    <table class="table table-bordered table-sm" id="tablaFactura">
      <thead>
        <tr>
          <th>Producto</th>
          <th>Cantidad</th>
          <th>Precio</th>
          <th>Total</th>
          <th>Acci칩n</th>
        </tr>
      </thead>
      <tbody id="listaProductosFactura">
        <!-- Filas de productos se agregan din치micamente -->
      </tbody>
    </table>

    <div class="row">
      <div class="col-md-6 offset-md-6">
        <table class="table table-borderless table-sm">
          <tr>
            <th>Subtotal:</th>
            <td id="subtotal">$0.00</td>
          </tr>
          <tr>
            <th>IVA (15%):</th>
            <td id="iva">$0.00</td>
          </tr>
          <tr>
            <th>Total:</th>
            <td id="total">$0.00</td>
          </tr>
        </table>
      </div>
    </div>

    <button type="submit" class="btn btn-success">Confirmar</button>
  </form>
</div>

<!-- Modal Productos -->
<div class="modal fade" id="modalProductos" tabindex="-1">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Productos</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <table class="table table-hover table-sm" id="tablaProductos">
          <thead>
            <tr>
              <th>Nombre</th>
              <th>Precio</th>
              <th>Stock</th>
              <th>Acci칩n</th>
            </tr>
          </thead>
          <tbody>
            {% for producto in productos %}
            <tr data-id="{{ producto.id }}" data-codigo="{{ producto.codigo_qr }}" data-nombre="{{ producto.nombre }}">
              <td>{{ producto.nombre }}</td>
              <td>{{ producto.precio }}</td>
              <td>{{ producto.stock }}</td>
              <td><button type="button" class="btn btn-primary btn-sm" onclick="agregarProductoModal(this)">Agregar</button></td>
            </tr>
            {% endfor %}
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>

<script>
let productosFactura = [];

function agregarProductoModal(btn) {
  const tr = btn.closest('tr');
  agregarProductoAFactura(tr);
  const modal = bootstrap.Modal.getInstance(document.getElementById('modalProductos'));
  modal.hide();
}

function buscarProducto() {
  const valor = document.getElementById('codigoEscaneado').value.trim().toLowerCase();
  if(!valor) return;

  const tr = Array.from(document.querySelectorAll('#tablaProductos tbody tr')).find(tr => {
    const idProducto = tr.dataset.id;
    const codigoProducto = tr.dataset.codigo || '';
    const nombreProducto = tr.dataset.nombre.toLowerCase();
    return idProducto === valor || `id${idProducto}` === valor || codigoProducto.toLowerCase() === valor || nombreProducto.includes(valor);
  });

  if(tr){
    agregarProductoAFactura(tr);
    document.getElementById('codigoEscaneado').value = '';
  } else {
    alert('Producto no encontrado');
    document.getElementById('codigoEscaneado').select();
  }
}

function agregarProductoAFactura(tr) {
  const id = tr.dataset.id;
  const nombre = tr.dataset.nombre;
  const precio = parseFloat(tr.children[1].innerText);
  const stock = parseInt(tr.children[2].innerText);

  let existente = productosFactura.find(p => p.id === id);
  if(existente){
    if(existente.cantidad < stock) existente.cantidad += 1;
  } else {
    productosFactura.push({id, nombre, precio, cantidad:1, stock});
  }
  renderizarTabla();
}

function renderizarTabla() {
  const tbody = document.getElementById('listaProductosFactura');
  tbody.innerHTML = '';
  let subtotal = 0;

  productosFactura.forEach(p => {
    const total = p.precio * p.cantidad;
    subtotal += total;

    const tr = document.createElement('tr');
    tr.innerHTML = `
      <td>${p.nombre}</td>
      <td><input type="number" value="${p.cantidad}" min="1" max="${p.stock}" onchange="actualizarCantidad(${p.id}, this.value)"></td>
      <td>${p.precio.toFixed(2)}</td>
      <td>${total.toFixed(2)}</td>
      <td><button type="button" class="btn btn-danger btn-sm" onclick="eliminarProducto(${p.id})">X</button></td>
      <input type="hidden" name="productos[]" value="${p.id}">
      <input type="hidden" name="cantidades[]" value="${p.cantidad}">
    `;
    tbody.appendChild(tr);
  });

  const iva = subtotal * 0.15;
  const total = subtotal + iva;

  document.getElementById('subtotal').innerText = '$' + subtotal.toFixed(2);
  document.getElementById('iva').innerText = '$' + iva.toFixed(2);
  document.getElementById('total').innerText = '$' + total.toFixed(2);
}

function actualizarCantidad(id, cantidad) {
  let p = productosFactura.find(p => p.id == id);
  if(p){
    cantidad = Math.min(cantidad, p.stock);
    p.cantidad = parseInt(cantidad);
    renderizarTabla();
  }
}

function eliminarProducto(id) {
  productosFactura = productosFactura.filter(p => p.id != id);
  renderizarTabla();
}
</script>
{% endblock %}
